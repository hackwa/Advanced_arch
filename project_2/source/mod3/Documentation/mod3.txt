=============================================================================
List of generated methods in project: mod3

This text description is generated by Processor Expert. Do not modify it.
=============================================================================

Module "clockMan1" (component fsl_clock_manager)
   - clockMan1_CLOCK_SYS_SetOutDiv1 -Sets the clock out divider1 setting(OUTDIV1).
   - clockMan1_CLOCK_SYS_GetOutDiv1 -Gets the clock out divider1 setting(OUTDIV1).
   - clockMan1_CLOCK_SYS_SetOutDiv4 -Sets the clock out divider4 setting(OUTDIV4).
   - clockMan1_CLOCK_SYS_GetOutDiv4 -Gets the clock out divider4 setting(OUTDIV4).
   - clockMan1_CLOCK_SYS_SetOutDiv -Sets the clock out dividers setting.
   - clockMan1_CLOCK_SYS_GetOutDiv -Gets the clock out dividers setting.
   - clockMan1_CLOCK_SYS_GetPllFllClockFreq -Get the MCGPLLCLK/MCGFLLCLK/IRC48MCLK clock frequency.
   - clockMan1_CLOCK_SYS_SetPllfllSel -Set PLL/FLL clock selection.
   - clockMan1_CLOCK_SYS_GetPllfllSel -Get PLL/FLL clock selection.
   - clockMan1_CLOCK_SYS_GetFixedFreqClockFreq -Gets the MCGFFCLK clock frequency.
   - clockMan1_CLOCK_SYS_GetInternalRefClockFreq -Get internal reference clock frequency.
   - clockMan1_CLOCK_SYS_GetExternalRefClock32kFreq -Gets the external reference 32k clock frequency.
   - clockMan1_CLOCK_SYS_SetExternalRefClock32kSrc -Set the clock selection of ERCLK32K.
   - clockMan1_CLOCK_SYS_GetExternalRefClock32kSrc -Get the clock selection of ERCLK32K.
   - clockMan1_CLOCK_SYS_GetOsc0ExternalRefClockFreq -Gets the OSC0ERCLK frequency.
   - clockMan1_CLOCK_SYS_GetRtcFreq -Gets RTC input clock frequency.
   - clockMan1_CLOCK_SYS_GetRtcOutFreq -Gets RTC_CLKOUT frequency.
   - clockMan1_CLOCK_SYS_GetRtcOutSrc -Gets RTC_CLKOUT source.
   - clockMan1_CLOCK_SYS_SetRtcOutSrc -Gets RTC_CLKOUT source.
   - clockMan1_CLOCK_SYS_GetCopFreq -Gets the COP clock frequency.
   - clockMan1_CLOCK_SYS_GetLptmrFreq -Gets LPTMRx pre-scaler/glitch filter clock frequency.
   - clockMan1_CLOCK_SYS_GetTpmFreq -Gets TPM clock frequency.
   - clockMan1_CLOCK_SYS_SetTpmSrc -Set the TPM clock source selection.
   - clockMan1_CLOCK_SYS_GetTpmSrc -Get the TPM clock source selection.
   - clockMan1_CLOCK_SYS_GetTpmExternalFreq -Get the TPM external clock source frequency.
   - clockMan1_CLOCK_SYS_SetTpmExternalSrc -Set the TPM external clock source selection.
   - clockMan1_CLOCK_SYS_GetTpmExternalSrc -Set the TPM external clock source selection.
   - clockMan1_CLOCK_SYS_GetUsbfsFreq -Gets the clock frequency for USB FS OTG module.
   - clockMan1_CLOCK_SYS_SetUsbfsSrc -Set the selection of the clock source for the USB FS 48 MHz clock.
   - clockMan1_CLOCK_SYS_GetUsbfsSrc -Get the selection of the clock source for the USB FS 48 MHz clock.
   - clockMan1_CLOCK_SYS_GetSpiFreq -Gets the clock frequency for SPI module.
   - clockMan1_CLOCK_SYS_GetI2cFreq -Gets the clock frequency for I2C module.
   - clockMan1_CLOCK_SYS_GetLpsciFreq -Gets the clock frequency for LPSCI module.
   - clockMan1_CLOCK_SYS_SetLpsciSrc -Set the LPSCI clock source selection.
   - clockMan1_CLOCK_SYS_GetLpsciSrc -Get the LPSCI clock source selection.
   - clockMan1_CLOCK_SYS_GetUartFreq -Get the UART clock frequency.
   - clockMan1_CLOCK_SYS_GetAdcAltFreq -Gets ADC alternate clock frequency.
   - clockMan1_CLOCK_SYS_GetGpioFreq -Gets the clock frequency for GPIO module.
   - clockMan1_CLOCK_SYS_GetCmpFreq -Gets the clock frequency for CMP module.
   - clockMan1_CLOCK_SYS_GetPitFreq -Gets the clock frequency for PIT module.
   - clockMan1_CLOCK_SYS_GetFtfFreq -Gets the clock frequency for FTF module. (Flash Memory)
   - clockMan1_CLOCK_SYS_EnableDmaClock -Enable the clock for DMA module.
   - clockMan1_CLOCK_SYS_DisableDmaClock -Disable the clock for DMA module.
   - clockMan1_CLOCK_SYS_GetDmaGateCmd -Get the the clock gate state for DMA module.
   - clockMan1_CLOCK_SYS_EnableDmamuxClock -Enable the clock for DMAMUX module.
   - clockMan1_CLOCK_SYS_DisableDmamuxClock -Disable the clock for DMAMUX module.
   - clockMan1_CLOCK_SYS_GetDmamuxGateCmd -Get the the clock gate state for DMAMUX module.
   - clockMan1_CLOCK_SYS_EnablePortClock -Enable the clock for PORT module.
   - clockMan1_CLOCK_SYS_DisablePortClock -Disable the clock for PORT module.
   - clockMan1_CLOCK_SYS_GetPortGateCmd -Get the the clock gate state for PORT module.
   - clockMan1_CLOCK_SYS_EnableFtfClock -Enable the clock for FTF module.
   - clockMan1_CLOCK_SYS_DisableFtfClock -Disable the clock for FTF module.
   - clockMan1_CLOCK_SYS_GetFtfGateCmd -Get the the clock gate state for FTF module.
   - clockMan1_CLOCK_SYS_EnableAdcClock -Enable the clock for ADC module.
   - clockMan1_CLOCK_SYS_DisableAdcClock -Disable the clock for ADC module.
   - clockMan1_CLOCK_SYS_GetAdcGateCmd -Get the the clock gate state for ADC module.
   - clockMan1_CLOCK_SYS_EnableCmpClock -Enable the clock for CMP module.
   - clockMan1_CLOCK_SYS_DisableCmpClock -Disable the clock for CMP module.
   - clockMan1_CLOCK_SYS_GetCmpGateCmd -Get the the clock gate state for CMP module.
   - clockMan1_CLOCK_SYS_EnableDacClock -Enable the clock for DAC module.
   - clockMan1_CLOCK_SYS_DisableDacClock -Disable the clock for DAC module.
   - clockMan1_CLOCK_SYS_GetDacGateCmd -Get the the clock gate state for DAC module.
   - clockMan1_CLOCK_SYS_EnableTpmClock -Enable the clock for TPM module.
   - clockMan1_CLOCK_SYS_DisableTpmClock -Disable the clock for TPM module.
   - clockMan1_CLOCK_SYS_GetTpmGateCmd -Get the the clock gate state for TPM module.
   - clockMan1_CLOCK_SYS_EnablePitClock -Enable the clock for PIT module.
   - clockMan1_CLOCK_SYS_DisablePitClock -Disable the clock for PIT module.
   - clockMan1_CLOCK_SYS_GetPitGateCmd -Get the the clock gate state for PIT module.
   - clockMan1_CLOCK_SYS_EnableLptmrClock -Enable the clock for LPTIMER module.
   - clockMan1_CLOCK_SYS_DisableLptmrClock -Disable the clock for LPTIMER module.
   - clockMan1_CLOCK_SYS_GetLptmrGateCmd -Get the the clock gate state for LPTIMER module.
   - clockMan1_CLOCK_SYS_EnableTsiClock -Enable the clock for TSI module.
   - clockMan1_CLOCK_SYS_DisableTsiClock -Disable the clock for TSI module.
   - clockMan1_CLOCK_SYS_GetTsiGateCmd -Get the the clock gate state for TSI module.
   - clockMan1_CLOCK_SYS_EnableRtcClock -Enable the clock for RTC module.
   - clockMan1_CLOCK_SYS_DisableRtcClock -Disable the clock for RTC module.
   - clockMan1_CLOCK_SYS_GetRtcGateCmd -Get the the clock gate state for RTC module.
   - clockMan1_CLOCK_SYS_EnableUsbfsClock -Enable the clock for USBFS module.
   - clockMan1_CLOCK_SYS_DisableUsbfsClock -Disable the clock for USBFS module.
   - clockMan1_CLOCK_SYS_GetUsbfsGateCmd -Get the the clock gate state for USB module.
   - clockMan1_CLOCK_SYS_EnableSpiClock -Enable the clock for SPI module.
   - clockMan1_CLOCK_SYS_DisableSpiClock -Disable the clock for SPI module.
   - clockMan1_CLOCK_SYS_GetSpiGateCmd -Get the the clock gate state for SPI module.
   - clockMan1_CLOCK_SYS_EnableLpsciClock -Enable the clock for LPSCI module.
   - clockMan1_CLOCK_SYS_DisableLpsciClock -Disable the clock for LPSCI module.
   - clockMan1_CLOCK_SYS_GetLpsciGateCmd -Get the the clock gate state for LPSCI module.
   - clockMan1_CLOCK_SYS_EnableUartClock -Enable the clock for UART module.
   - clockMan1_CLOCK_SYS_DisableUartClock -Disable the clock for UART module.
   - clockMan1_CLOCK_SYS_GetUartGateCmd -Get the the clock gate state for UART module.
   - clockMan1_CLOCK_SYS_EnableI2cClock -Enable the clock for I2C module.
   - clockMan1_CLOCK_SYS_DisableI2cClock -Disable the clock for I2C module.
   - clockMan1_CLOCK_SYS_GetI2cGateCmd -Get the the clock gate state for I2C module.
   - clockMan1_CLOCK_SYS_SetUsbExternalFreq -Set the USB external clock frequency(USB_CLKIN).
   - clockMan1_CLOCK_SYS_SetTpmExternalFreq -Set the TPM external clock frequency(TPM_CLKx).
   - clockMan1_CLOCK_SYS_Init -Install pre-defined clock configurations.
   - clockMan1_CLOCK_SYS_UpdateConfiguration -Set system clock configuration according to pre-defined structure.
   - clockMan1_CLOCK_SYS_SetConfiguration -Set system clock configuration.
   - clockMan1_CLOCK_SYS_GetCurrentConfiguration -Get current system clock configuration.
   - clockMan1_CLOCK_SYS_GetErrorCallback -Get the callback which returns error in last clock switch.
   - clockMan1_CLOCK_SYS_SetMcgliteMode -Sets the MCG_Lite to some specific mode.
   - clockMan1_CLOCK_SYS_SetMcgMode -Set MCG to some target mode.
   - clockMan1_CLOCK_SYS_OscInit -Initialize OSC.
   - clockMan1_CLOCK_SYS_OscDeinit -Deinitialize OSC.
   - clockMan1_CLOCK_SYS_SetOscerConfigration -Configure the OSCERCLK.
   - clockMan1_CLOCK_SYS_RtcOscInit -Initialize the RTC OSC.
   - clockMan1_CLOCK_SYS_RtcOscDeinit -Deinitialize RTC OSC.
   - clockMan1_CLOCK_SYS_GetFreq -Gets the clock frequency for a specific clock name.
   - clockMan1_CLOCK_SYS_GetCoreClockFreq -Get core clock frequency.
   - clockMan1_CLOCK_SYS_GetSystemClockFreq -Get system clock frequency.
   - clockMan1_CLOCK_SYS_GetBusClockFreq -Get bus clock frequency.
   - clockMan1_CLOCK_SYS_GetFlashClockFreq -Get flash clock frequency.
   - clockMan1_CLOCK_SYS_GetLpoClockFreq -Get LPO clock frequency.
   - clockMan1_CLOCK_SYS_SetSystickSrc -Set Systick clock source SYST_CSR[CLKSOURCE].
   - clockMan1_CLOCK_SYS_GetSystickFreq -Get Systick clock frequency.

Module "pin_init"  (component PinSettings)
   - pin_init_hardware_init -This method configures registers according to settings of routing and electrical features. It 
                provides pin initialization for selected pins during processor start-up. Selected pins are either user selected 
                pins or pins selected in pin properties in components.  Only pins of devices  enabled for auto initialization 
                are handled within this method.
   - pin_init_init_adc_pins -ADC method configures registers according to settings  of routing and electrical features. This 
                method is enabled only if any pin of corresponding peripheral type is selected. Selected pins are either user 
                selected pins or pins selected in pin items in components. Call this method code to route desired pins into 
                ADC0 peripheral.
   - pin_init_deinit_adc_pins -ADC method configures registers according to settings  of routing and electrical features. This 
                method is enabled only if any pin of corresponding peripheral type is selected. Selected pins are either user 
                selected pins or pins selected in pin items in components. Call this method code to route desired pins into 
                ADC0 peripheral.
   - pin_init_init_osc_pins -OSC method configures registers according to settings  of routing and electrical features. This 
                method is enabled only if any pin of corresponding peripheral type is selected. Selected pins are either user 
                selected pins or pins selected in pin items in components. Call this method code to route desired pins into 
                OSC0 peripheral.
   - pin_init_deinit_osc_pins -OSC method configures registers according to settings  of routing and electrical features. This 
                method is enabled only if any pin of corresponding peripheral type is selected. Selected pins are either user 
                selected pins or pins selected in pin items in components. Call this method code to route desired pins into 
                OSC0 peripheral.
   - pin_init_init_rcm_pins -RCM method configures registers according to settings  of routing and electrical features. This 
                method is enabled only if any pin of corresponding peripheral type is selected. Selected pins are either user 
                selected pins or pins selected in pin items in components. Call this method code to route desired pins into RCM 
                peripheral.
   - pin_init_deinit_rcm_pins -RCM method configures registers according to settings  of routing and electrical features. This 
                method is enabled only if any pin of corresponding peripheral type is selected. Selected pins are either user 
                selected pins or pins selected in pin items in components. Call this method code to route desired pins into RCM 
                peripheral.
   - pin_init_init_swd_pins -SWD method configures registers according to settings  of routing and electrical features. This 
                method is enabled only if any pin of corresponding peripheral type is selected. Selected pins are either user 
                selected pins or pins selected in pin items in components. Call this method code to route desired pins into SWD 
                peripheral.
   - pin_init_deinit_swd_pins -SWD method configures registers according to settings  of routing and electrical features. This 
                method is enabled only if any pin of corresponding peripheral type is selected. Selected pins are either user 
                selected pins or pins selected in pin items in components. Call this method code to route desired pins into SWD 
                peripheral.
   - pin_init_init_tpm_pins -TPM method configures registers according to settings  of routing and electrical features. This 
                method is enabled only if any pin of corresponding peripheral type is selected. Selected pins are either user 
                selected pins or pins selected in pin items in components. Call this method code to route desired pins into 
                TPM0, TPM1, TPM2 peripherals.
   - pin_init_deinit_tpm_pins -TPM method configures registers according to settings  of routing and electrical features. This 
                method is enabled only if any pin of corresponding peripheral type is selected. Selected pins are either user 
                selected pins or pins selected in pin items in components. Call this method code to route desired pins into 
                TPM0, TPM1, TPM2 peripherals.
   - pin_init_init_tsi_pins -TSI method configures registers according to settings  of routing and electrical features. This 
                method is enabled only if any pin of corresponding peripheral type is selected. Selected pins are either user 
                selected pins or pins selected in pin items in components. Call this method code to route desired pins into 
                TSI0 peripheral.
   - pin_init_deinit_tsi_pins -TSI method configures registers according to settings  of routing and electrical features. This 
                method is enabled only if any pin of corresponding peripheral type is selected. Selected pins are either user 
                selected pins or pins selected in pin items in components. Call this method code to route desired pins into 
                TSI0 peripheral.
   - pin_init_init_uart0_pins -UART0 method configures registers according to settings  of routing and electrical features. 
                This method is enabled only if any pin of corresponding peripheral type is selected. Selected pins are either 
                user selected pins or pins selected in pin items in components. Call this method code to route desired pins 
                into UART0 peripheral.
   - pin_init_deinit_uart0_pins -UART0 method configures registers according to settings  of routing and electrical features. 
                This method is enabled only if any pin of corresponding peripheral type is selected. Selected pins are either 
                user selected pins or pins selected in pin items in components. Call this method code to route desired pins 
                into UART0 peripheral.

Module "osa1"      (component fsl_os_abstraction)
   - osa1_OSA_PollAllOtherTasks -Calls all task functions one time except for the current task.
   - osa1_DefaultISR -The default interrupt handler installed in vector table.
   - osa1_OSA_SemaCreate -Creates a semaphore with a given value.
   - osa1_OSA_SemaWait -Pending a semaphore with timeout.
   - osa1_OSA_SemaPost -Signals for someone waiting on the semaphore to wake up.
   - osa1_OSA_SemaDestroy -Destroys a previously created semaphore.
   - osa1_OSA_MutexCreate -Create an unlocked mutex.
   - osa1_OSA_MutexLock -Waits for a mutex and locks it.
   - osa1_OSA_MutexUnlock -Unlocks a previously locked mutex.
   - osa1_OSA_MutexDestroy -Destroys a previously created mutex.
   - osa1_OSA_EventCreate -Initializes an event object with all flags cleared.
   - osa1_OSA_EventWait -Waits for specified event flags to be set.
   - osa1_OSA_EventSet -Sets one or more event flags.
   - osa1_OSA_EventClear -Clears one or more flags.
   - osa1_OSA_EventGetFlags -Gets event flags status.
   - osa1_OSA_EventDestroy -Destroys a previously created event object.
   - osa1_OSA_TaskCreate -Creates a task.
   - osa1_OSA_TaskDestroy -Destroys a previously created task.
   - osa1_OSA_TaskYield -Puts the active task to the end of scheduler's queue.
   - osa1_OSA_TaskGetHandler -Gets the handler of active task.
   - osa1_OSA_TaskGetPriority -Gets the priority of a task.
   - osa1_OSA_TaskSetPriority -Sets the priority of a task.
   - osa1_OSA_MsgQCreate -Initializes a message queue.
   - osa1_OSA_MsgQPut -Puts a message at the end of the queue.
   - osa1_OSA_MsgQGet -Reads and remove a message at the head of the queue.
   - osa1_OSA_MsgQDestroy -Destroys a previously created queue.
   - osa1_OSA_MemAlloc -Reserves the requested amount of memory in bytes.
   - osa1_OSA_MemAllocZero -Reserves the requested amount of memory in bytes and initializes it to 0.
   - osa1_OSA_MemFree -Releases the memory previously reserved.
   - osa1_OSA_TimeDelay -Delays execution for a number of milliseconds.
   - osa1_OSA_TimeGetMsec -Gets the current time since system boot in milliseconds.
   - osa1_OSA_InstallIntHandler -Installs the interrupt handler.
   - osa1_OSA_EnterCritical -Enters the critical section to ensure some code is not preempted.
   - osa1_OSA_ExitCritical -Exits the critical section.
   - osa1_OSA_Init -Initializes the RTOS services.
   - osa1_OSA_Start -Starts the RTOS.

Module "DbgCs1"    (component fsl_debug_console)
   - DbgCs1_DbgConsole_Init -Init the UART/LPUART used for debug messages.
   - DbgCs1_DbgConsole_DeInit -Deinit the UART/LPUART used for debug messages.
   - DbgCs1_debug_printf -Prints formatted output to the standard output stream.
   - DbgCs1_debug_putchar -Writes a character to stdout.
   - DbgCs1_debug_scanf -Reads formatted data from the standard input stream.
   - DbgCs1_debug_getchar -Reads a character from standard input.

Module "intMan1"   (component fsl_interrupt_manager)
   - intMan1_INT_SYS_InstallHandler -Installs an interrupt handler routine for a given IRQ number.
   - intMan1_INT_SYS_EnableIRQ -Enables an interrupt for a given IRQ number.
   - intMan1_INT_SYS_DisableIRQ -Disables an interrupt for a given IRQ number.
   - intMan1_INT_SYS_EnableIRQGlobal -Enables system interrupt.
   - intMan1_INT_SYS_DisableIRQGlobal -Disable system interrupt.

Module "tpmTimer1" (component fsl_tpm_hal)
   - tpmTimer1_TPM_HAL_Reset -reset tpm registers
   - tpmTimer1_TPM_HAL_EnablePwmMode -Enables the TPM PWM output mode.
   - tpmTimer1_TPM_HAL_DisableChn -Disables the TPM channel.
   - tpmTimer1_TPM_HAL_SetClockMode -Set TPM clock mode.
   - tpmTimer1_TPM_HAL_GetClockMode -get TPM clock mode.
   - tpmTimer1_TPM_HAL_SetClockDiv -set TPM clock divider.
   - tpmTimer1_TPM_HAL_GetClockDiv -get TPM clock divider.
   - tpmTimer1_TPM_HAL_EnableTimerOverflowInt -Enable the TPM peripheral timer overflow interrupt.
   - tpmTimer1_TPM_HAL_DisableTimerOverflowInt -Disable the TPM peripheral timer overflow interrupt.
   - tpmTimer1_TPM_HAL_IsOverflowIntEnabled -Read the bit that controls TPM timer overflow interrupt enablement.
   - tpmTimer1_TPM_HAL_GetTimerOverflowStatus -return TPM peripheral timer overflow interrupt flag.
   - tpmTimer1_TPM_HAL_ClearTimerOverflowFlag -Clear the TPM timer overflow interrupt flag.
   - tpmTimer1_TPM_HAL_SetCpwms -set TPM center-aligned PWM select.
   - tpmTimer1_TPM_HAL_GetCpwms -get TPM center-aligned PWM selection value.
   - tpmTimer1_TPM_HAL_ClearCounter -clear TPM peripheral current counter value.
   - tpmTimer1_TPM_HAL_GetCounterVal -return TPM peripheral current counter value.
   - tpmTimer1_TPM_HAL_SetMod -set TPM peripheral timer modulo value.
   - tpmTimer1_TPM_HAL_GetMod -return TPM peripheral counter modulo value.
   - tpmTimer1_TPM_HAL_SetChnMsnbaElsnbaVal -Set TPM peripheral timer channel mode and edge level,.
   - tpmTimer1_TPM_HAL_GetChnMsnbaVal -get TPM peripheral timer channel mode.
   - tpmTimer1_TPM_HAL_GetChnElsnbaVal -get TPM peripheral timer channel edge level.
   - tpmTimer1_TPM_HAL_EnableChnInt -enable TPM peripheral timer channel(n) interrupt.
   - tpmTimer1_TPM_HAL_DisableChnInt -disable TPM peripheral timer channel(n) interrupt.
   - tpmTimer1_TPM_HAL_IsChnIntEnabled -get TPM peripheral timer channel(n) interrupt enabled or not.
   - tpmTimer1_TPM_HAL_GetChnStatus -return if any event for TPM peripheral timer channel has occourred ,
   - tpmTimer1_TPM_HAL_ClearChnInt -return if any event for TPM peripheral timer channel has occourred ,
   - tpmTimer1_TPM_HAL_SetChnCountVal -set TPM peripheral timer channel counter value,
   - tpmTimer1_TPM_HAL_GetChnCountVal -get TPM peripheral timer channel counter value.
   - tpmTimer1_TPM_HAL_GetStatusRegVal -get TPM peripheral timer channel event status.
   - tpmTimer1_TPM_HAL_ClearStatusReg -clear TPM peripheral timer clear status register value,
   - tpmTimer1_TPM_HAL_SetTriggerSrc -set TPM peripheral timer trigger.
   - tpmTimer1_TPM_HAL_SetTriggerMode -set TPM peripheral timer running on trigger or not .
   - tpmTimer1_TPM_HAL_SetReloadOnTriggerMode -enable TPM timer counter reload on selected trigger or not.
   - tpmTimer1_TPM_HAL_SetStopOnOverflowMode -enable TPM timer counter sotp on selected trigger or not.
   - tpmTimer1_TPM_HAL_EnableGlobalTimeBase -enable TPM timer global time base.
   - tpmTimer1_TPM_HAL_SetDbgMode -set BDM mode.
   - tpmTimer1_TPM_HAL_SetWaitMode -set WAIT mode behavior.

Module "adConv1"   (component fsl_adc16)
   - adConv1_ADC16_DRV_GetAutoCalibrationParam -Gets the calibration parameters by auto calibration.
   - adConv1_ADC16_DRV_SetCalibrationParam -Sets the calibration parameters.
   - adConv1_ADC16_DRV_StructInitUserConfigDefault -Fills the initial user configuration by default for a one-time trigger mode.
   - adConv1_ADC16_DRV_Init -Initializes the ADC module converter.
   - adConv1_ADC16_DRV_Deinit -De-initializes the ADC module converter.
   - adConv1_ADC16_DRV_ConfigHwCompare -Configures the hardware compare feature.
   - adConv1_ADC16_DRV_ConfigHwAverage -Configures the hardware averaging feature.
   - adConv1_ADC16_DRV_SetChnMux -Switches the channel mux.
   - adConv1_ADC16_DRV_ConfigConvChn -Configure the conversion channel by software.
   - adConv1_ADC16_DRV_WaitConvDone -Waits for the latest conversion to be complete.
   - adConv1_ADC16_DRV_PauseConv -Pauses the current conversion by software.
   - adConv1_ADC16_DRV_GetConvValueRAW -Gets the latest conversion value with no format.
   - adConv1_ADC16_DRV_GetConvValueSigned -Gets the latest conversion value with signed.
   - adConv1_ADC16_DRV_GetConvFlag -Gets the event status of the ADC16 module.
   - adConv1_ADC16_DRV_GetChnFlag -Gets the event status of each channel group.

Module "gpio2"     (component fsl_gpio_hal)
   - gpio2_GPIO_HAL_SetPinDir -Sets the individual GPIO pin to general input or output.
   - gpio2_GPIO_HAL_SetPortDir -Sets the GPIO port pins to general input or output.
   - gpio2_FGPIO_HAL_SetPinDir -Sets the individual FGPIO pin to general input or output.
   - gpio2_FGPIO_HAL_SetPortDir -Sets the FGPIO port pins to general input or output.
   - gpio2_GPIO_HAL_GetPinDir -Gets the current direction of the individual GPIO pin.
   - gpio2_GPIO_HAL_GetPortDir -Gets the GPIO port pins direction.
   - gpio2_FGPIO_HAL_GetPinDir -Gets the current direction of the individual FGPIO pin.
   - gpio2_FGPIO_HAL_GetPortDir -Gets the FGPIO port pins direction.
   - gpio2_GPIO_HAL_WritePinOutput -Sets the output level of the individual GPIO pin to logic 1 or 0.
   - gpio2_GPIO_HAL_ReadPinOutput -Reads the current pin output.
   - gpio2_GPIO_HAL_SetPinOutput -Sets the output level of the individual GPIO pin to logic 1.
   - gpio2_GPIO_HAL_ClearPinOutput -Clears the output level of the individual GPIO pin to logic 0.
   - gpio2_GPIO_HAL_TogglePinOutput -Reverses the current output logic of the individual GPIO pin.
   - gpio2_GPIO_HAL_WritePortOutput -Sets the output of the GPIO port pins to a specific logic value.
   - gpio2_GPIO_HAL_ReadPortOutput -Reads out all pin output status of the current port.
   - gpio2_GPIO_HAL_SetPortOutput -Sets the output level of the GPIO port pins to logic 1.
   - gpio2_GPIO_HAL_ClearPortOutput -Clears the output level of the GPIO port pins to logic 0.
   - gpio2_GPIO_HAL_TogglePortOutput -Reverses the current output logic of the GPIO port pins.
   - gpio2_FGPIO_HAL_WritePinOutput -Sets the output level of the individual FGPIO pin to logic 1 or 0.
   - gpio2_FGPIO_HAL_ReadPinOutput -Reads the current FGPIOpin output.
   - gpio2_FGPIO_HAL_SetPinOutput -Sets the output level of an individual FGPIO pin to logic 1.
   - gpio2_FGPIO_HAL_ClearPinOutput -Clears the output level of an individual FGPIO pin to logic 0.
   - gpio2_FGPIO_HAL_TogglePinOutput -Reverses the current output logic of an individual FGPIO pin.
   - gpio2_FGPIO_HAL_WritePortOutput -Sets the output of the FGPIO port pins to a specific logic value.
   - gpio2_FGPIO_HAL_ReadPortOutput -Reads out all pin output status of the current port.
   - gpio2_FGPIO_HAL_SetPortOutput -Sets the output level of the FGPIO port pins to logic 1.
   - gpio2_FGPIO_HAL_ClearPortOutput -Clears the output level of the FGPIO port pins to logic 0.
   - gpio2_FGPIO_HAL_TogglePortOutput -Reverses the current output logic of the FGPIO port pins.
   - gpio2_GPIO_HAL_ReadPinInput -Reads the current input value of the individual GPIO pin.
   - gpio2_GPIO_HAL_ReadPortInput -Reads the current input value of a specific GPIO port.
   - gpio2_FGPIO_HAL_ReadPinInput -Gets the current input value of an individual FGPIO pin.
   - gpio2_FGPIO_HAL_ReadPortInput -Gets the current input value of a specific FGPIO port.

Module "gpio4"     (component fsl_gpio_hal)
   - gpio4_GPIO_HAL_SetPinDir -Sets the individual GPIO pin to general input or output.
   - gpio4_GPIO_HAL_SetPortDir -Sets the GPIO port pins to general input or output.
   - gpio4_FGPIO_HAL_SetPinDir -Sets the individual FGPIO pin to general input or output.
   - gpio4_FGPIO_HAL_SetPortDir -Sets the FGPIO port pins to general input or output.
   - gpio4_GPIO_HAL_GetPinDir -Gets the current direction of the individual GPIO pin.
   - gpio4_GPIO_HAL_GetPortDir -Gets the GPIO port pins direction.
   - gpio4_FGPIO_HAL_GetPinDir -Gets the current direction of the individual FGPIO pin.
   - gpio4_FGPIO_HAL_GetPortDir -Gets the FGPIO port pins direction.
   - gpio4_GPIO_HAL_WritePinOutput -Sets the output level of the individual GPIO pin to logic 1 or 0.
   - gpio4_GPIO_HAL_ReadPinOutput -Reads the current pin output.
   - gpio4_GPIO_HAL_SetPinOutput -Sets the output level of the individual GPIO pin to logic 1.
   - gpio4_GPIO_HAL_ClearPinOutput -Clears the output level of the individual GPIO pin to logic 0.
   - gpio4_GPIO_HAL_TogglePinOutput -Reverses the current output logic of the individual GPIO pin.
   - gpio4_GPIO_HAL_WritePortOutput -Sets the output of the GPIO port pins to a specific logic value.
   - gpio4_GPIO_HAL_ReadPortOutput -Reads out all pin output status of the current port.
   - gpio4_GPIO_HAL_SetPortOutput -Sets the output level of the GPIO port pins to logic 1.
   - gpio4_GPIO_HAL_ClearPortOutput -Clears the output level of the GPIO port pins to logic 0.
   - gpio4_GPIO_HAL_TogglePortOutput -Reverses the current output logic of the GPIO port pins.
   - gpio4_FGPIO_HAL_WritePinOutput -Sets the output level of the individual FGPIO pin to logic 1 or 0.
   - gpio4_FGPIO_HAL_ReadPinOutput -Reads the current FGPIOpin output.
   - gpio4_FGPIO_HAL_SetPinOutput -Sets the output level of an individual FGPIO pin to logic 1.
   - gpio4_FGPIO_HAL_ClearPinOutput -Clears the output level of an individual FGPIO pin to logic 0.
   - gpio4_FGPIO_HAL_TogglePinOutput -Reverses the current output logic of an individual FGPIO pin.
   - gpio4_FGPIO_HAL_WritePortOutput -Sets the output of the FGPIO port pins to a specific logic value.
   - gpio4_FGPIO_HAL_ReadPortOutput -Reads out all pin output status of the current port.
   - gpio4_FGPIO_HAL_SetPortOutput -Sets the output level of the FGPIO port pins to logic 1.
   - gpio4_FGPIO_HAL_ClearPortOutput -Clears the output level of the FGPIO port pins to logic 0.
   - gpio4_FGPIO_HAL_TogglePortOutput -Reverses the current output logic of the FGPIO port pins.
   - gpio4_GPIO_HAL_ReadPinInput -Reads the current input value of the individual GPIO pin.
   - gpio4_GPIO_HAL_ReadPortInput -Reads the current input value of a specific GPIO port.
   - gpio4_FGPIO_HAL_ReadPinInput -Gets the current input value of an individual FGPIO pin.
   - gpio4_FGPIO_HAL_ReadPortInput -Gets the current input value of a specific FGPIO port.

Module "spiCom1"   (component fsl_spi_hal)
   - spiCom1_SPI_HAL_Init -Restores the SPI to reset configuration.
   - spiCom1_SPI_HAL_Enable -Enables the SPI peripheral.
   - spiCom1_SPI_HAL_Disable -Disables the SPI peripheral.
   - spiCom1_SPI_HAL_SetBaud -Sets the SPI baud rate in bits per second.
   - spiCom1_SPI_HAL_SetBaudDivisors -Configures the baud rate divisors manually.
   - spiCom1_SPI_HAL_SetMasterSlave -Configures the SPI for master or slave.
   - spiCom1_SPI_HAL_IsMaster -Returns whether the SPI module is in master mode.
   - spiCom1_SPI_HAL_SetSlaveSelectOutputMode -Sets how the slave select output operates.
   - spiCom1_SPI_HAL_SetDataFormat -Sets the polarity, phase, and shift direction.
   - spiCom1_SPI_HAL_GetDataRegAddr -Gets the SPI data register address for DMA operation.
   - spiCom1_SPI_HAL_SetPinMode -Sets the SPI pin mode.
   - spiCom1_SPI_HAL_SetTxDmaCmd -Configures the transmit DMA request.
   - spiCom1_SPI_HAL_SetRxDmaCmd -Configures the receive DMA requests.
   - spiCom1_SPI_HAL_SetIntMode -Enables or disables the SPI interrupts.
   - spiCom1_SPI_HAL_SetReceiveAndFaultIntCmd -Enables or disables the SPI receive buffer/FIFO full and mode fault interrupt.
   - spiCom1_SPI_HAL_SetTransmitIntCmd -Enables or disables the SPI transmit buffer/FIFO empty interrupt.
   - spiCom1_SPI_HAL_SetMatchIntCmd -Enables or disables the SPI match interrupt.
   - spiCom1_SPI_HAL_GetIntStatusFlag -Gets the SPI interrupt status flag state..
   - spiCom1_SPI_HAL_IsReadBuffFullPending -Checks whether the read buffer/FIFO is full.
   - spiCom1_SPI_HAL_IsTxBuffEmptyPending -Checks whether the transmit buffer/FIFO is empty.
   - spiCom1_SPI_HAL_IsModeFaultPending -Checks whether a mode fault occurred.
   - spiCom1_SPI_HAL_ClearModeFaultFlag -Clears the mode fault flag.
   - spiCom1_SPI_HAL_IsMatchPending -Checks whether the data received matches the previously-set match value.
   - spiCom1_SPI_HAL_ClearMatchFlag -Clears the match flag.
   - spiCom1_SPI_HAL_ReadData -Reads a byte from the data buffer.
   - spiCom1_SPI_HAL_WriteData -Writes a byte into the data buffer.
   - spiCom1_SPI_HAL_WriteDataBlocking -Writes a byte into the data buffer and waits till complete to return.
   - spiCom1_SPI_HAL_SetMatchValue -Sets the value which triggers the match interrupt.

Module "Cpu"       (component MKL25Z128LK4_4SDK)
   - Cpu_SystemInit -This method configures the oscillator (PLL) that is part of the microcontroller device. SystemInit is 
                called from startup_device file.
   - Cpu_SystemCoreClockUpdate -SystemCoreClockUpdate evaluates the clock register settings and calculates the current core 
                clock.

===================================================================================
